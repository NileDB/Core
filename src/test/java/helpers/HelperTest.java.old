package helpers;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

import io.vertx.ext.unit.TestContext;
import io.vertx.ext.unit.junit.VertxUnitRunner;

@RunWith(VertxUnitRunner.class)
public class HelperTest {
	
	@Before
	public void setUp(TestContext context) {
	}
	
	@After
	public void tearDown(TestContext context) {
	}
	
	@Test
	public void testNull(TestContext context) {
		// toFirstUpper
		context.assertEquals(null, Helper.toFirstUpper(null));
		
		// toFirstLower
		context.assertEquals(null, Helper.toFirstLower(null));
		
		// hyphenated
		context.assertEquals(null, Helper.hyphenated(null));
		
		// underscored
		context.assertEquals(null, Helper.underscored(null));
		
		// camelCase
		context.assertEquals(null, Helper.camelCase(null));
	}
	
	@Test
	public void testBlank(TestContext context) {
		// toFirstUpper
		context.assertEquals("", Helper.toFirstUpper(""));
		
		// toFirstLower
		context.assertEquals("", Helper.toFirstLower(""));
		
		// hyphenated
		context.assertEquals("", Helper.hyphenated(""));
		
		// underscored
		context.assertEquals("", Helper.underscored(""));
		
		// camelCase
		context.assertEquals("", Helper.camelCase(""));
	}
	
	@Test
	public void testOneCharacter(TestContext context) {
		// toFirstUpper
		context.assertEquals("A", Helper.toFirstUpper("a"));
		context.assertEquals("A", Helper.toFirstUpper("A"));
		context.assertEquals("-", Helper.toFirstUpper("-"));
		context.assertEquals("_", Helper.toFirstUpper("_"));
		
		// toFirstLower
		context.assertEquals("a", Helper.toFirstLower("A"));
		context.assertEquals("a", Helper.toFirstLower("a"));
		context.assertEquals("-", Helper.toFirstLower("-"));
		context.assertEquals("_", Helper.toFirstLower("_"));
		
		// hyphenated
		context.assertEquals("a", Helper.hyphenated("a"));
		context.assertEquals("A", Helper.hyphenated("A"));
		context.assertEquals("-", Helper.hyphenated("-"));
		context.assertEquals("_", Helper.hyphenated("_"));
		
		// underscored
		context.assertEquals("a", Helper.underscored("a"));
		context.assertEquals("A", Helper.underscored("A"));
		context.assertEquals("-", Helper.underscored("-"));
		context.assertEquals("_", Helper.underscored("_"));
		
		// camelCase
		context.assertEquals("a", Helper.camelCase("a"));
		context.assertEquals("A", Helper.camelCase("A"));
		context.assertEquals("-", Helper.camelCase("-"));
		context.assertEquals("_", Helper.camelCase("_"));
	}
	
	@Test
	public void testOneWord(TestContext context) {
		// toFirstUpper
		context.assertEquals("Manolo", Helper.toFirstUpper("manolo"));
		context.assertEquals("Manolo", Helper.toFirstUpper("Manolo"));
		context.assertEquals("MANOLO", Helper.toFirstUpper("mANOLO"));
		context.assertEquals("MANOLO", Helper.toFirstUpper("MANOLO"));
		
		// toFirstLower
		context.assertEquals("manolo", Helper.toFirstLower("Manolo"));
		context.assertEquals("manolo", Helper.toFirstLower("manolo"));
		context.assertEquals("manolo", Helper.toFirstLower("Manolo"));
		context.assertEquals("manolo", Helper.toFirstLower("manolo"));
		
		// hyphenated
		context.assertEquals("manolo", Helper.hyphenated("manolo"));
		context.assertEquals("Manolo", Helper.hyphenated("Manolo"));
		
		// underscored
		context.assertEquals("manolo", Helper.underscored("manolo"));
		context.assertEquals("Manolo", Helper.underscored("Manolo"));
		
		// camelCase
		context.assertEquals("manolo", Helper.camelCase("manolo"));
		context.assertEquals("Manolo", Helper.camelCase("Manolo"));
	}
	
	@Test
	public void testSeveralWords(TestContext context) {
		// hyphenated
		context.assertEquals("otra-Más", Helper.hyphenated("otraMás"));
		context.assertEquals("otra-mas-Mejor", Helper.hyphenated("otra-masMejor"));
		context.assertEquals("otra-mas-Mejor", Helper.hyphenated("otra_masMejor"));
		context.assertEquals("Otra-Mas", Helper.hyphenated("OtraMas"));
		
		// underscored
		context.assertEquals("otra_Más", Helper.underscored("otraMás"));
		context.assertEquals("otra_mas_Mejor", Helper.underscored("otra-masMejor"));
		context.assertEquals("otra_mas_Mejor", Helper.underscored("otra_masMejor"));
		context.assertEquals("Otra_Mas", Helper.underscored("OtraMas"));
		
		// camelCase
		context.assertEquals("otraMás", Helper.camelCase("otraMás"));
		context.assertEquals("otraMasMejor", Helper.camelCase("otra-masMejor"));
		context.assertEquals("otraMasMejor", Helper.camelCase("otra_masMejor"));
		context.assertEquals("OtraMas", Helper.camelCase("OtraMas"));
	}
	
	@Test
	public void testPrefix(TestContext context) {
		// toFirstUpper
		context.assertEquals("_Hola", Helper.toFirstUpper("_Hola"));
		
		// toFirstLower
		context.assertEquals("_hola", Helper.toFirstLower("_hola"));
		
		// hyphenated
		context.assertEquals("_Otra-Mas", Helper.hyphenated("_OtraMas"));
		context.assertEquals("_Otra-Mas", Helper.hyphenated("_Otra_Mas"));
		context.assertEquals("$-Otra-Mas", Helper.hyphenated("$Otra_Mas"));
		context.assertEquals("-Otra-Mas", Helper.hyphenated("-Otra_Mas"));
		context.assertEquals("-otra-Mas", Helper.hyphenated("-otra_Mas"));
		
		// underscored
		context.assertEquals("_Otra_Mas", Helper.underscored("_OtraMas"));
		context.assertEquals("_Otra_Mas", Helper.underscored("_Otra_Mas"));
		context.assertEquals("$_Otra_Mas", Helper.underscored("$Otra-Mas"));
		context.assertEquals("-Otra_Mas", Helper.underscored("-Otra_Mas"));
		context.assertEquals("-otra_Mas", Helper.underscored("-otra_Mas"));
		
		// camelCase
		context.assertEquals("_OtraMas", Helper.camelCase("_OtraMas"));
		context.assertEquals("_OtraMas", Helper.camelCase("_Otra_Mas"));
		context.assertEquals("-OtraMas", Helper.camelCase("-Otra_Mas"));
		context.assertEquals("-otraMas", Helper.camelCase("-otra_Mas"));
	}
	
	@Test
	public void testSuffix(TestContext context) {
		// hyphenated
		context.assertEquals("Otra-Mas_", Helper.hyphenated("OtraMas_"));
		context.assertEquals("Otra-Mas_", Helper.hyphenated("Otra_Mas_"));
		context.assertEquals("Otra-Mas-", Helper.hyphenated("Otra_Mas-"));
		context.assertEquals("otra-Mas-", Helper.hyphenated("otra_Mas-"));
		
		// underscored
		context.assertEquals("Otra_Mas_", Helper.underscored("OtraMas_"));
		context.assertEquals("Otra_Mas_", Helper.underscored("Otra_Mas_"));
		context.assertEquals("Otra_Mas-", Helper.underscored("Otra_Mas-"));
		context.assertEquals("otra_Mas-", Helper.underscored("otra_Mas-"));
		
		// camelCase
		context.assertEquals("OtraMas_", Helper.camelCase("OtraMas_"));
		context.assertEquals("OtraMas_", Helper.camelCase("Otra_Mas_"));
		context.assertEquals("OtraMas-", Helper.camelCase("Otra_Mas-"));
		context.assertEquals("otraMas-", Helper.camelCase("otra_Mas-"));
	}
	
	@Test
	public void testCycle(TestContext context) {
		String[] words = new String[] {
				null,
				"",
				"a",
				"A",
				"_",
				"-",
				"word",
				"WORD",
				"TwoWords",
				"_TwoWords",
				"_id_",
				"_Id_",
				"twoWords_",
				"two-words_",
				"version_",
				"entity__id__seq"
		};
		
		for (int i = 0; i < words.length; i++) {
			String underscored = Helper.underscored(words[i]);
			String hyphenated = Helper.hyphenated(words[i]);
			String camelCase = Helper.camelCase(words[i]);
			
			context.assertEquals(underscored == null ? null : underscored.toLowerCase(), Helper.underscored(hyphenated) == null ? null : Helper.underscored(hyphenated).toLowerCase());
			context.assertEquals(underscored == null ? null : underscored.toLowerCase(), Helper.underscored(camelCase) == null ? null : Helper.underscored(camelCase).toLowerCase());
			
			context.assertEquals(hyphenated, Helper.hyphenated(underscored));
			context.assertEquals(hyphenated == null ? null : hyphenated.toLowerCase(), Helper.hyphenated(camelCase) == null ? null : Helper.hyphenated(camelCase).toLowerCase());
			
			context.assertEquals(camelCase, Helper.camelCase(underscored));
			context.assertEquals(camelCase, Helper.camelCase(hyphenated));
		}
	}
}
